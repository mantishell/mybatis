<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
    <!--配置properties
        可以在标签内部配置连接数据库的信息，也可以通过属性引用外部配置文件信息
        resource属性：常用的
            用于指定配置文件的位置，是按照类路径的写法来写，并且必须存在于类路径下
        url属性：
            是要求按照url的写法来写地址
    -->
    <properties resource="jdbcConfig.properties" ></properties>

    <!--使用typeAliases配置别名，它只能配置domain中类的别名-->
    <typeAliases>
        <!--typeAlias用于配置别名，type属性指定的是实体类全限定类名。alias属性指定别名，当指定了别名就不区分大小写了-->
<!--        <typeAlias type="com.mantishell.domain.User" alias="user"/>-->
        <!--由于配置typeAlias比较麻烦，所以有简化方式 package
            package:用于指定要配置别名的包，当指定后，该包下的实体类都会注册别名，并且类名就是别名，不区分大小写
        -->

        <package name="com.mantishell.domain"/>
    </typeAliases>
    <environments default="mysql">
        <environment id="mysql">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!--<mapper resource="com/mantishell/dao/IUserDao.xml" />-->
        <!--package标签是用于指定dao接口所在的包，当指定后，就不需要写mapper、resource或class了-->
        <package name="com.mantishell.dao"/>
    </mappers>
</configuration>